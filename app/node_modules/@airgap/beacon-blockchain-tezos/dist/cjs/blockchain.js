"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TezosBlockchain = void 0;
const wallet_lists_1 = require("./ui/alert/wallet-lists");
class TezosBlockchain {
    constructor() {
        this.identifier = 'xtz';
    }
    validateRequest(input) {
        return __awaiter(this, void 0, void 0, function* () {
            // TODO: Validation
            if (input) {
                return;
            }
        });
    }
    handleResponse(input) {
        return __awaiter(this, void 0, void 0, function* () {
            // TODO: Validation
            if (input) {
                return;
            }
        });
    }
    getWalletLists() {
        return __awaiter(this, void 0, void 0, function* () {
            return {
                extensionList: wallet_lists_1.extensionList,
                desktopList: wallet_lists_1.desktopList,
                webList: wallet_lists_1.webList,
                iOSList: wallet_lists_1.iOSList
            };
        });
    }
    getAccountInfosFromPermissionResponse(_permissionResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            return [{ accountId: '', address: '', publicKey: '' }];
        });
    }
}
exports.TezosBlockchain = TezosBlockchain;
//# sourceMappingURL=blockchain.js.map