"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.messageEvents = void 0;
const events_1 = require("./events");
const beacon_types_1 = require("@airgap/beacon-types");
exports.messageEvents = {
    [beacon_types_1.BeaconMessageType.BlockchainRequest]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.BlockchainResponse]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.PermissionRequest]: {
        sent: events_1.BeaconEvent.PERMISSION_REQUEST_SENT,
        success: events_1.BeaconEvent.PERMISSION_REQUEST_SUCCESS,
        error: events_1.BeaconEvent.PERMISSION_REQUEST_ERROR
    },
    [beacon_types_1.BeaconMessageType.PermissionResponse]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.ProofOfEventChallengeRequest]: {
        sent: events_1.BeaconEvent.PROOF_OF_EVENT_CHALLENGE_REQUEST_SENT,
        success: events_1.BeaconEvent.PROOF_OF_EVENT_CHALLENGE_REQUEST_SUCCESS,
        error: events_1.BeaconEvent.PROOF_OF_EVENT_CHALLENGE_REQUEST_ERROR
    },
    [beacon_types_1.BeaconMessageType.ProofOfEventChallengeResponse]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.ProofOfEventChallengeRecorded]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.OperationRequest]: {
        sent: events_1.BeaconEvent.OPERATION_REQUEST_SENT,
        success: events_1.BeaconEvent.OPERATION_REQUEST_SUCCESS,
        error: events_1.BeaconEvent.OPERATION_REQUEST_ERROR
    },
    [beacon_types_1.BeaconMessageType.OperationResponse]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.SignPayloadRequest]: {
        sent: events_1.BeaconEvent.SIGN_REQUEST_SENT,
        success: events_1.BeaconEvent.SIGN_REQUEST_SUCCESS,
        error: events_1.BeaconEvent.SIGN_REQUEST_ERROR
    },
    [beacon_types_1.BeaconMessageType.SignPayloadResponse]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    // TODO: ENCRYPTION
    // [BeaconMessageType.EncryptPayloadRequest]: {
    //   sent: BeaconEvent.ENCRYPT_REQUEST_SENT,
    //   success: BeaconEvent.ENCRYPT_REQUEST_SUCCESS,
    //   error: BeaconEvent.ENCRYPT_REQUEST_ERROR
    // },
    // [BeaconMessageType.EncryptPayloadResponse]: {
    //   sent: BeaconEvent.UNKNOWN,
    //   success: BeaconEvent.UNKNOWN,
    //   error: BeaconEvent.UNKNOWN
    // },
    [beacon_types_1.BeaconMessageType.BroadcastRequest]: {
        sent: events_1.BeaconEvent.BROADCAST_REQUEST_SENT,
        success: events_1.BeaconEvent.BROADCAST_REQUEST_SUCCESS,
        error: events_1.BeaconEvent.BROADCAST_REQUEST_ERROR
    },
    [beacon_types_1.BeaconMessageType.BroadcastResponse]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.ChangeAccountRequest]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.Acknowledge]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.Disconnect]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    },
    [beacon_types_1.BeaconMessageType.Error]: {
        sent: events_1.BeaconEvent.UNKNOWN,
        success: events_1.BeaconEvent.UNKNOWN,
        error: events_1.BeaconEvent.UNKNOWN
    }
};
//# sourceMappingURL=beacon-message-events.js.map