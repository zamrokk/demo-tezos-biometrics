import { NetworkType } from '@airgap/beacon-types';
import { BlockExplorer } from './block-explorer';
export class TzktBlockExplorer extends BlockExplorer {
    rpcUrls;
    constructor(rpcUrls = {
        [NetworkType.MAINNET]: 'https://tzkt.io',
        [NetworkType.GHOSTNET]: 'https://ghostnet.tzkt.io',
        [NetworkType.WEEKLYNET]: 'https://weeklynet.tzkt.io',
        [NetworkType.DAILYNET]: 'https://dailynet.tzkt.io',
        [NetworkType.DELPHINET]: 'https://delphinet.tzkt.io',
        [NetworkType.EDONET]: 'https://edonet.tzkt.io',
        [NetworkType.FLORENCENET]: 'https://florencenet.tzkt.io',
        [NetworkType.GRANADANET]: 'https://granadanet.tzkt.io',
        [NetworkType.HANGZHOUNET]: 'https://hangzhounet.tzkt.io',
        [NetworkType.ITHACANET]: 'https://ithacanet.tzkt.io',
        [NetworkType.JAKARTANET]: 'https://jakartanet.tzkt.io',
        [NetworkType.KATHMANDUNET]: 'https://kathmandunet.tzkt.io',
        [NetworkType.LIMANET]: 'https://limanet.tzkt.io',
        [NetworkType.MUMBAINET]: 'https://mumbainet.tzkt.io',
        [NetworkType.NAIROBINET]: 'https://nairobinet.tzkt.io',
        [NetworkType.OXFORDNET]: 'https://oxfordnet.tzkt.io',
        [NetworkType.CUSTOM]: 'https://oxfordnet.tzkt.io'
    }) {
        super(rpcUrls);
        this.rpcUrls = rpcUrls;
    }
    async getAddressLink(address, network) {
        const blockExplorer = await this.getLinkForNetwork(network);
        return `${blockExplorer}/${address}`;
    }
    async getTransactionLink(transactionId, network) {
        const blockExplorer = await this.getLinkForNetwork(network);
        return `${blockExplorer}/${transactionId}`;
    }
}
//# sourceMappingURL=tzkt-blockexplorer.js.map