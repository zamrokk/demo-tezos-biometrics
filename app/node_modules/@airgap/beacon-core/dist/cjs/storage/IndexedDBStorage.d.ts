import { Storage, StorageKey, StorageKeyReturnType } from '@airgap/beacon-types';
export declare class IndexedDBStorage extends Storage {
    private readonly dbName;
    private readonly storeName;
    private db;
    static doesDatabaseAndTableExist(): Promise<boolean>;
    openDatabase(): Promise<string>;
    get<K extends StorageKey>(key: K): Promise<StorageKeyReturnType[K]>;
    set<K extends StorageKey>(key: K, value: StorageKeyReturnType[K]): Promise<void>;
    delete<K extends StorageKey>(key: K): Promise<void>;
    subscribeToStorageChanged(callback: (arg: {
        eventType: 'storageCleared' | 'entryModified';
        key: string | null;
        oldValue: string | null;
        newValue: string | null;
    }) => {}): Promise<void>;
    getPrefixedKey<K extends StorageKey>(key: K): string;
    clearTable(): Promise<void>;
}
