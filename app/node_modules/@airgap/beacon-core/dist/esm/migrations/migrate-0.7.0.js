import { StorageKey } from '@airgap/beacon-types';
export const migrate_0_7_0 = async (storage) => {
    // Migrate AccountInfo
    const accountInfos = await storage.get(StorageKey.ACCOUNTS);
    accountInfos.forEach((accountInfo) => {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const accountInfoOld = accountInfo;
        // pubKey is now publicKey
        if (accountInfoOld.pubkey) {
            accountInfo.publicKey = accountInfoOld.pubkey;
            delete accountInfoOld.pubkey;
        }
        // connectedAt is now a number
        accountInfo.connectedAt = new Date(accountInfoOld.connectedAt).getTime();
    });
    await storage.set(StorageKey.ACCOUNTS, accountInfos);
    // Migrate P2PPeers
    const P2PPairingRequests = await storage.get(StorageKey.TRANSPORT_P2P_PEERS_DAPP);
    P2PPairingRequests.forEach((p2pPairInfo) => {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const P2PPairingRequestOld = p2pPairInfo;
        // pubKey is now publicKey
        if (P2PPairingRequestOld.pubKey) {
            p2pPairInfo.publicKey = P2PPairingRequestOld.pubKey;
            delete P2PPairingRequestOld.pubKey;
        }
    });
    await storage.set(StorageKey.TRANSPORT_P2P_PEERS_DAPP, P2PPairingRequests);
    await storage.set(StorageKey.BEACON_SDK_VERSION, '0.7.0');
};
//# sourceMappingURL=migrate-0.7.0.js.map