import { StorageKey } from '@airgap/beacon-types';
import { StorageManager } from './StorageManager';
/**
 * @internalapi
 *
 * The AppMetadataManager provides CRUD functionality for app-metadata entities and persists them to the provided storage.
 */
export class AppMetadataManager {
    storageManager;
    constructor(storage) {
        this.storageManager = new StorageManager(storage, StorageKey.APP_METADATA_LIST);
    }
    async getAppMetadataList() {
        return (await this.storageManager.getAll()) ?? [];
    }
    async getAppMetadata(senderId) {
        return this.storageManager.getOne((appMetadata) => appMetadata.senderId === senderId);
    }
    async addAppMetadata(appMetadata) {
        return this.storageManager.addOne(appMetadata, (appMetadataElement) => appMetadataElement.senderId === appMetadata.senderId);
    }
    async removeAppMetadata(senderId) {
        return this.storageManager.remove((appMetadata) => appMetadata.senderId === senderId);
    }
    async removeAppMetadatas(senderIds) {
        return this.storageManager.remove((appMetadata) => senderIds.includes(appMetadata.senderId));
    }
    async removeAllAppMetadata() {
        return this.storageManager.removeAll();
    }
}
//# sourceMappingURL=AppMetadataManager.js.map