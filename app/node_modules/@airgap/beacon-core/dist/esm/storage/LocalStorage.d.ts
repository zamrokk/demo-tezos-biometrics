import { Storage, StorageKey, StorageKeyReturnType } from '@airgap/beacon-types';
/**
 * @internalapi
 *
 * A storage that can be used in the browser
 */
export declare class LocalStorage extends Storage {
    private readonly prefix?;
    constructor(prefix?: string | undefined);
    static isSupported(): Promise<boolean>;
    get<K extends StorageKey>(key: K): Promise<StorageKeyReturnType[K]>;
    set<K extends StorageKey>(key: K, value: StorageKeyReturnType[K]): Promise<void>;
    delete<K extends StorageKey>(key: K): Promise<void>;
    subscribeToStorageChanged(callback: (arg: {
        eventType: 'storageCleared' | 'entryModified';
        key: string | null;
        oldValue: string | null;
        newValue: string | null;
    }) => {}): Promise<void>;
    getPrefixedKey(key: string): string;
}
