/**
 *  @category Error
 *  @description Error that indicates the wallet returned an invalid namespace
 */
export class InvalidReceivedSessionNamespace extends Error {
    messageWc;
    codeWc;
    data;
    name = 'InvalidReceivedSessionNamespace';
    constructor(messageWc, codeWc, type, data) {
        super();
        this.messageWc = messageWc;
        this.codeWc = codeWc;
        this.data = data;
        const baseMessage = `${codeWc}: ${messageWc}.`;
        this.message = data
            ? type === 'incomplete'
                ? ` ${baseMessage} "${data}" is missing in the session namespace.`
                : ` ${baseMessage} "${data}" is invalid.`
            : baseMessage;
    }
}
/**
 *  @category Error
 *  @description Error that indicates there is no active session
 */
export class NotConnected extends Error {
    name = 'NotConnected';
    constructor() {
        super('Not connected, no active session');
    }
}
/**
 *  @category Error
 *  @description Error that indicates the session is invalid
 */
export class InvalidSession extends Error {
    name = 'InvalidSession';
    constructor(message) {
        super(message);
    }
}
/**
 *  @category Error
 *  @description Error that indicates missing required permission scopes
 */
export class MissingRequiredScope extends Error {
    requiredScopes;
    name = 'MissingRequiredScope';
    constructor(requiredScopes) {
        super(`Required permission scope were not granted for "${requiredScopes}"`);
        this.requiredScopes = requiredScopes;
    }
}
/**
 *  @category Error
 *  @description Error that indicates the active network is not specified
 */
export class ActiveNetworkUnspecified extends Error {
    name = 'ActiveNetworkUnspecified';
    constructor() {
        super('Please specify the active network using the "setActiveNetwork" method.');
    }
}
/**
 *  @category Error
 *  @description Error that indicates the active account is not specified
 */
export class ActiveAccountUnspecified extends Error {
    name = 'ActiveAccountUnspecified';
    constructor() {
        super('Please specify the active account using the "setActiveAccount" method.');
    }
}
/**
 *  @category Error
 *  @description Error that indicates the combinaison pkh-network is not part of the active session
 */
export class InvalidNetworkOrAccount extends Error {
    network;
    pkh;
    name = 'InvalidNetworkOrAccount';
    constructor(network, pkh) {
        super(`No permission. The combinaison "${network}" and "${pkh}" is not part of the active session.`);
        this.network = network;
        this.pkh = pkh;
    }
}
//# sourceMappingURL=error.js.map