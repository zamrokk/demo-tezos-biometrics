import { Optional, ProofOfEventChallengeRecordedRequest } from '@airgap/beacon-types';
import { PermissionRequest, OperationRequest, SignPayloadRequest, ProofOfEventChallengeRequest, BroadcastRequest } from '@airgap/beacon-types';
/**
 * @internalapi
 * @category DApp
 */
export type IgnoredRequestInputProperties = 'id' | 'senderId' | 'version';
/**
 * @internalapi
 * @category DApp
 */
export type PermissionRequestInput = Optional<PermissionRequest, IgnoredRequestInputProperties>;
/**
 * @internalapi
 * @category DApp
 */
export type ProofOfEventChallengeRequestInput = Optional<ProofOfEventChallengeRequest, IgnoredRequestInputProperties>;
/**
 * @internalapi
 * @category DApp
 */
export type ProofOfEventChallengeRecordedMessageInput = Optional<ProofOfEventChallengeRecordedRequest, IgnoredRequestInputProperties>;
/**
 * @internalapi
 * @category DApp
 */
export type OperationRequestInput = Optional<OperationRequest, IgnoredRequestInputProperties>;
/**
 * @internalapi
 * @category DApp
 */
export type SignPayloadRequestInput = Optional<SignPayloadRequest, IgnoredRequestInputProperties>;
/**
 * @internalapi
 * @category DApp
 */
/**
 * @internalapi
 * @category DApp
 */
export type BroadcastRequestInput = Optional<BroadcastRequest, IgnoredRequestInputProperties>;
/**
 * @internalapi
 * @category DApp
 */
export type BeaconRequestInputMessage = PermissionRequestInput | OperationRequestInput | SignPayloadRequestInput | BroadcastRequestInput | ProofOfEventChallengeRequestInput | ProofOfEventChallengeRecordedMessageInput;
